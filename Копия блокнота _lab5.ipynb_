{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.2"},"colab":{"name":"Копия блокнота \"lab5.ipynb\"","provenance":[{"file_id":"1qNXv_GzDzMxqhzu-N2S2grEhkKHwwoRy","timestamp":1639731724131},{"file_id":"1SOx8vThNzVFZR_zaUlIZ56WxGNaVJ1hk","timestamp":1604754473954},{"file_id":"1XUT-Qa-VLIAMmHbt6pe3AdzDLSyaFoWv","timestamp":1604677054518},{"file_id":"1UpsFM_rY1G1r2EBkqj-A-3wpk1l_Ambe","timestamp":1596006394187},{"file_id":"1TtILmuSoWXOYmbTIAQmGaScvuHGWvpsI","timestamp":1595563808854},{"file_id":"1EdBdyqxLu-WiLmriWNwYl5Ct33JYcEG2","timestamp":1582113683695},{"file_id":"10_Aehfbxgr3fxXPgI1gM5BTU8yOy-Z4U","timestamp":1579514615233}],"collapsed_sections":["MI18l-l9WhAk","1wrEGqBSWhAr","gStgBJy2WhAx"]}},"cells":[{"cell_type":"markdown","metadata":{"id":"UHX9p5jfTySS"},"source":["## Задание 5.1"]},{"cell_type":"markdown","metadata":{"id":"0EnHNZtbXlH0"},"source":["Набор данных тут: https://github.com/sismetanin/rureviews, также есть в папке [Data](https://drive.google.com/drive/folders/1YAMe7MiTxA-RSSd8Ex2p-L0Dspe6Gs4L). Те, кто предпочитает работать с английским языком, могут использовать набор данных `sms_spam`."]},{"cell_type":"markdown","metadata":{"id":"bJox-LoonoPx"},"source":["Применим полученные навыки и решим задачу анализа тональности отзывов. \n","\n","Нужно повторить весь пайплайн от сырых текстов до получения обученной модели.\n","\n","Обязательные шаги предобработки:\n","1. токенизация\n","2. приведение к нижнему регистру\n","3. удаление стоп-слов\n","4. лемматизация\n","5. векторизация (с настройкой гиперпараметров)\n","6. построение модели\n","7. оценка качества модели\n","\n","Обязательно использование векторайзеров:\n","1. мешок n-грамм (диапазон для n подбирайте самостоятельно, запрещено использовать только униграммы).\n","2. tf-idf ((диапазон для n подбирайте самостоятельно, также нужно подбирать параметры max_df, min_df, max_features)\n","3. символьные n-граммы (диапазон для n подбирайте самостоятельно)\n","\n","В качестве классификатора нужно использовать наивный байесовский классификатор. \n","\n","Для сравнения векторайзеров между собой используйте precision, recall, f1-score и accuracy. Для этого сформируйте датафрейм, в котором в строках будут разные векторайзеры, а в столбцах разные метрики качества, а в  ячейках будут значения этих метрик для соответсвующих векторайзеров."]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GpAbFXGDohsM","executionInfo":{"status":"ok","timestamp":1641903709506,"user_tz":-180,"elapsed":2070,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"34c0648e-4cd6-4219-ba8c-41d7b6bb0075"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["!pip install pymorphy2\n","from pymorphy2 import MorphAnalyzer\n","pymorphy2_analyzer = MorphAnalyzer()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t_7DqerFDSQO","executionInfo":{"status":"ok","timestamp":1641903712705,"user_tz":-180,"elapsed":3203,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"73704a4e-c650-49c5-903e-7707e82c08a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pymorphy2 in /usr/local/lib/python3.7/dist-packages (0.9.1)\n","Requirement already satisfied: dawg-python>=0.7.1 in /usr/local/lib/python3.7/dist-packages (from pymorphy2) (0.7.2)\n","Requirement already satisfied: pymorphy2-dicts-ru<3.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from pymorphy2) (2.4.417127.4579844)\n","Requirement already satisfied: docopt>=0.6 in /usr/local/lib/python3.7/dist-packages (from pymorphy2) (0.6.2)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","from sklearn.metrics import * \n","from sklearn.model_selection import train_test_split "],"metadata":{"id":"1lyVzPfJohoJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.read_csv('/content/drive/MyDrive/ColabNotebooks/ML/Data/women-clothing-accessories.csv', sep='\\t', usecols=[0, 1])"],"metadata":{"id":"TsqJpwP_ohks"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(data.review, data.sentiment, train_size = 0.7)"],"metadata":{"id":"-FArtaeXohhc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.sentiment.value_counts()"],"metadata":{"id":"xy1qk8FMohfl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903713798,"user_tz":-180,"elapsed":9,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"f35461c3-bacc-4171-f4ff-9e77ef84de99"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["neautral    30000\n","positive    30000\n","negative    30000\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["y_train.value_counts()"],"metadata":{"id":"7-HGRQG3ohaS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903714028,"user_tz":-180,"elapsed":235,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"1f7f8c1e-d40b-4c36-e7cd-ed1e5d635137"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["positive    21015\n","neautral    21015\n","negative    20969\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["import nltk # уже знакомая нам библиотека nltk\n","from nltk.tokenize import word_tokenize # готовый токенизатор библиотеки nltk"],"metadata":{"id":"u9L8oirYBtg4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from nltk.corpus import stopwords\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","import string\n","string.punctuation"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":105},"id":"sNOyYf-4BteG","executionInfo":{"status":"ok","timestamp":1641903714526,"user_tz":-180,"elapsed":26,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"1d2bc3b6-5b3f-4909-d4f1-fc4c1c142eb7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]},{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"F94UmrT3BtbY","executionInfo":{"status":"ok","timestamp":1641903714527,"user_tz":-180,"elapsed":24,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"e7a90104-2bc2-4872-f847-61e85ff71e24"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-a89187a7-a14d-4cfb-a106-d018eccd5887\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>качество плохое пошив ужасный (горловина напер...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Товар отдали другому человеку, я не получила п...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ужасная синтетика! Тонкая, ничего общего с пре...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>товар не пришел, продавец продлил защиту без м...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Кофточка голая синтетика, носить не возможно.</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89995</th>\n","      <td>сделано достаточно хорошо. на ткани сделан рис...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89996</th>\n","      <td>Накидка шикарная. Спасибо большое провдо линяе...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89997</th>\n","      <td>спасибо большое ) продовца рекомендую.. заказа...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89998</th>\n","      <td>Очень довольна заказом! Меньше месяца в РБ.  К...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89999</th>\n","      <td>хорошая куртка. постороннего запаха нет. швы р...</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90000 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a89187a7-a14d-4cfb-a106-d018eccd5887')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a89187a7-a14d-4cfb-a106-d018eccd5887 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a89187a7-a14d-4cfb-a106-d018eccd5887');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                                  review sentiment\n","0      качество плохое пошив ужасный (горловина напер...  negative\n","1      Товар отдали другому человеку, я не получила п...  negative\n","2      Ужасная синтетика! Тонкая, ничего общего с пре...  negative\n","3      товар не пришел, продавец продлил защиту без м...  negative\n","4          Кофточка голая синтетика, носить не возможно.  negative\n","...                                                  ...       ...\n","89995  сделано достаточно хорошо. на ткани сделан рис...  positive\n","89996  Накидка шикарная. Спасибо большое провдо линяе...  positive\n","89997  спасибо большое ) продовца рекомендую.. заказа...  positive\n","89998  Очень довольна заказом! Меньше месяца в РБ.  К...  positive\n","89999  хорошая куртка. постороннего запаха нет. швы р...  positive\n","\n","[90000 rows x 2 columns]"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["lowerCase = [sentence.lower() for sentence in data['review']]\n","tokenization = [word_tokenize(sentence) for sentence in lowerCase]\n","Stopword = stopwords.words('russian')\n","Stopword.extend(string.punctuation)\n","Stopwords = [[word for word in sentence if word not in Stopword] for sentence in tokenization]"],"metadata":{"id":"3XDCmz3TBtYW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lemmatization = [[pymorphy2_analyzer.parse(word)[0].normal_form for word in sentence] for sentence in Stopwords]\n","data['Lemmatization'] = lemmatization"],"metadata":{"id":"6aT4W8aYFfZP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def concat(column):\n","  series = list()\n","  for row in column:\n","    sent = ''\n","    for t in row:\n","      sent += ' ' + t\n","    series.append(sent)\n","  return series\n","data.Lemmatization = concat(data.Lemmatization)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Tg6u92JSBtVE","executionInfo":{"status":"ok","timestamp":1641903983371,"user_tz":-180,"elapsed":517,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"1958628b-f7dc-41c1-b4c6-e17ea9149705"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-6b27f642-f74d-4da3-82e8-a40924e3a837\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review</th>\n","      <th>sentiment</th>\n","      <th>Lemmatization</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>качество плохое пошив ужасный (горловина напер...</td>\n","      <td>negative</td>\n","      <td>качество плохой пошив ужасный горловина напер...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Товар отдали другому человеку, я не получила п...</td>\n","      <td>negative</td>\n","      <td>товар отдать другой человек получить посылка ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ужасная синтетика! Тонкая, ничего общего с пре...</td>\n","      <td>negative</td>\n","      <td>ужасный синтетик тонкий общий представить кар...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>товар не пришел, продавец продлил защиту без м...</td>\n","      <td>negative</td>\n","      <td>товар прийти продавец продлить защита мой сог...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Кофточка голая синтетика, носить не возможно.</td>\n","      <td>negative</td>\n","      <td>кофточка голый синтетик носить возможно</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89995</th>\n","      <td>сделано достаточно хорошо. на ткани сделан рис...</td>\n","      <td>positive</td>\n","      <td>сделать достаточно ткань сделать рисунок заме...</td>\n","    </tr>\n","    <tr>\n","      <th>89996</th>\n","      <td>Накидка шикарная. Спасибо большое провдо линяе...</td>\n","      <td>positive</td>\n","      <td>накидка шикарный спасибо большой провдо линят...</td>\n","    </tr>\n","    <tr>\n","      <th>89997</th>\n","      <td>спасибо большое ) продовца рекомендую.. заказа...</td>\n","      <td>positive</td>\n","      <td>спасибо большой продовца рекомендую.. заказат...</td>\n","    </tr>\n","    <tr>\n","      <th>89998</th>\n","      <td>Очень довольна заказом! Меньше месяца в РБ.  К...</td>\n","      <td>positive</td>\n","      <td>очень довольный заказ маленький месяц рб курь...</td>\n","    </tr>\n","    <tr>\n","      <th>89999</th>\n","      <td>хорошая куртка. постороннего запаха нет. швы р...</td>\n","      <td>positive</td>\n","      <td>хороший куртка посторонний запах шов ровный н...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90000 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b27f642-f74d-4da3-82e8-a40924e3a837')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6b27f642-f74d-4da3-82e8-a40924e3a837 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6b27f642-f74d-4da3-82e8-a40924e3a837');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                                  review  ...                                      Lemmatization\n","0      качество плохое пошив ужасный (горловина напер...  ...   качество плохой пошив ужасный горловина напер...\n","1      Товар отдали другому человеку, я не получила п...  ...   товар отдать другой человек получить посылка ...\n","2      Ужасная синтетика! Тонкая, ничего общего с пре...  ...   ужасный синтетик тонкий общий представить кар...\n","3      товар не пришел, продавец продлил защиту без м...  ...   товар прийти продавец продлить защита мой сог...\n","4          Кофточка голая синтетика, носить не возможно.  ...            кофточка голый синтетик носить возможно\n","...                                                  ...  ...                                                ...\n","89995  сделано достаточно хорошо. на ткани сделан рис...  ...   сделать достаточно ткань сделать рисунок заме...\n","89996  Накидка шикарная. Спасибо большое провдо линяе...  ...   накидка шикарный спасибо большой провдо линят...\n","89997  спасибо большое ) продовца рекомендую.. заказа...  ...   спасибо большой продовца рекомендую.. заказат...\n","89998  Очень довольна заказом! Меньше месяца в РБ.  К...  ...   очень довольный заказ маленький месяц рб курь...\n","89999  хорошая куртка. постороннего запаха нет. швы р...  ...   хороший куртка посторонний запах шов ровный н...\n","\n","[90000 rows x 3 columns]"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["a = []\n","k=0\n","for string in data['Lemmatization']:\n","  k+=1\n","  for i in string:\n","    a.append(i)\n","print(len(a))\n","print(len(set(a)))\n","print(k)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"33TyzGWOBtNU","executionInfo":{"status":"ok","timestamp":1641906443934,"user_tz":-180,"elapsed":2377,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"df49d6b7-6fd8-4da9-bc78-d4583fee88e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["9471476\n","229\n","90000\n"]}]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(data.Lemmatization, data.sentiment, train_size = 0.7)"],"metadata":{"id":"wan0aYwGHGOR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_frame = pd.DataFrame(columns=['precision', 'recall', 'f1-score', 'accuracy'])"],"metadata":{"id":"qRiCDXbcHGJT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.naive_bayes import MultinomialNB # наивный байесовский классификатор\n","from sklearn.feature_extraction.text import CountVectorizer # модель \"мешка слов\"\n","from sklearn.feature_extraction.text import TfidfVectorizer"],"metadata":{"id":"cBmcNwM9HoDN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def count_vectorizer_ngram(x_train, y_train, x_test, y_test, range = (1, 3)):\n","  vectorizer = CountVectorizer(ngram_range=range)\n","\n","  vectorized_x_train = vectorizer.fit_transform(x_train)\n","\n","  clf = MultinomialNB()\n","  clf.fit(vectorized_x_train, y_train)\n","\n","  vectorized_x_test = vectorizer.transform(x_test)\n","\n","  pred = clf.predict(vectorized_x_test)\n","  dict_classification = classification_report(y_test, pred, output_dict = True)\n","  \n","  name = 'count_vectorizer' + str(range)\n","  data_frame.loc[name] = [dict_classification['macro avg']['precision'], \n","                       dict_classification['macro avg']['recall'], \n","                       dict_classification['macro avg']['f1-score'],\n","                       dict_classification['accuracy']]"],"metadata":{"id":"D3qQfcvsHGDK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def count_vectorizer_symb_ngram(x_train, y_train, x_test, y_test, range = (1, 3)):\n","  vectorizer = CountVectorizer(ngram_range=range, analyzer='char')\n","\n","  vectorized_x_train = vectorizer.fit_transform(x_train)\n","\n","  clf = MultinomialNB()\n","  clf.fit(vectorized_x_train, y_train)\n","\n","  vectorized_x_test = vectorizer.transform(x_test)\n","\n","  pred = clf.predict(vectorized_x_test)\n","  dict_classification = classification_report(y_test, pred, output_dict = True)\n","  \n","  name = 'count_vectorizer_ngram' + str(range)\n","  data_frame.loc[name] = [dict_classification['macro avg']['precision'], \n","                       dict_classification['macro avg']['recall'], \n","                       dict_classification['macro avg']['f1-score'],\n","                       dict_classification['accuracy']]"],"metadata":{"id":"ORtXSxDgHF0B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def Tfi_dfVectorizer(x_train, y_train, x_test, y_test, range = (1, 3), \n","                      max_df = 5, min_df = 1, max_features = 2):\n","  tfidfvectorizer = TfidfVectorizer(ngram_range=range, \n","                                     max_df=max_df, \n","                                     min_df=min_df, \n","                                     max_features=max_features)\n","\n","  \n","  tfidfvectorized_x_train = tfidfvectorizer.fit_transform(x_train)\n","\n","  clf = MultinomialNB()\n","  clf.fit(tfidfvectorized_x_train, y_train)\n","\n","  tfidfvectorized_x_test = tfidfvectorizer.transform(x_test)\n","\n","  pred = clf.predict(tfidfvectorized_x_test)\n","  dictClassification = classification_report(y_test, pred, output_dict = True)\n","\n","  name = 'tfidfvectorizer' + str(range)\n","  data_frame.loc[name] = [dictClassification['macro avg']['precision'], \n","                       dictClassification['macro avg']['recall'], \n","                       dictClassification['macro avg']['f1-score'],\n","                       dictClassification['accuracy']]"],"metadata":{"id":"fT-hZPukHRy-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["count_vectorizer_ngram(x_train, y_train, x_test, y_test, (1, 1))\n","count_vectorizer_ngram(x_train, y_train, x_test, y_test, (1, 2))\n","count_vectorizer_ngram(x_train, y_train, x_test, y_test, (2, 2))\n","count_vectorizer_ngram(x_train, y_train, x_test, y_test, (2, 3))\n","count_vectorizer_ngram(x_train, y_train, x_test, y_test, (3, 4))\n","count_vectorizer_ngram(x_train, y_train, x_test, y_test, (4, 5))\n","count_vectorizer_symb_ngram(x_train, y_train, x_test, y_test, (1, 2))\n","count_vectorizer_symb_ngram(x_train, y_train, x_test, y_test, (2, 3))\n","count_vectorizer_symb_ngram(x_train, y_train, x_test, y_test, (3, 4))\n","count_vectorizer_symb_ngram(x_train, y_train, x_test, y_test, (4, 5))"],"metadata":{"id":"AogWRTEIHRuW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for n in range(1,10):\n","  for f in [50, 100, 150, 200]:\n","    for m_df in [0.95, 0.90, 0.85, 0.80, 0.75]:\n","        for mn_dif in[2,3,4]:\n","          Tfi_dfVectorizer(x_train, y_train, x_test, y_test, (1, n), max_df=m_df, min_df=mn_dif, max_features=f)\n","          '''Tfi_dfVectorizer(x_train, y_train, x_test, y_test, (2, n), max_df=m_df, min_df=mn_dif, max_features=f)\n","          Tfi_dfVectorizer(x_train, y_train, x_test, y_test, (3, n), max_df=m_df, min_df=mn_dif, max_features=f)\n","          Tfi_dfVectorizer(x_train, y_train, x_test, y_test, (4, n), max_df=m_df, min_df=mn_dif, max_features=f)'''\n","data_frame"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"6MvYsmklHQ0S","executionInfo":{"status":"ok","timestamp":1641918106879,"user_tz":-180,"elapsed":11190488,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"ab0da35c-9d6a-4eb5-e438-f091c52ec8cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-20f9f569-bb4b-4fba-9510-49b7e74c0639\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1-score</th>\n","      <th>accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count_vectorizer(1, 1)</th>\n","      <td>0.704761</td>\n","      <td>0.699372</td>\n","      <td>0.699908</td>\n","      <td>0.698863</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer(1, 2)</th>\n","      <td>0.716487</td>\n","      <td>0.715379</td>\n","      <td>0.715064</td>\n","      <td>0.714788</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer(2, 2)</th>\n","      <td>0.679901</td>\n","      <td>0.685987</td>\n","      <td>0.680790</td>\n","      <td>0.685123</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer(2, 3)</th>\n","      <td>0.673084</td>\n","      <td>0.680223</td>\n","      <td>0.673941</td>\n","      <td>0.679308</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer(3, 4)</th>\n","      <td>0.573813</td>\n","      <td>0.567670</td>\n","      <td>0.546339</td>\n","      <td>0.566201</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer(4, 5)</th>\n","      <td>0.509027</td>\n","      <td>0.444182</td>\n","      <td>0.383707</td>\n","      <td>0.441984</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer_ngram(1, 2)</th>\n","      <td>0.636758</td>\n","      <td>0.623782</td>\n","      <td>0.626633</td>\n","      <td>0.623569</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer_ngram(2, 3)</th>\n","      <td>0.686061</td>\n","      <td>0.672590</td>\n","      <td>0.675204</td>\n","      <td>0.672271</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer_ngram(3, 4)</th>\n","      <td>0.703091</td>\n","      <td>0.692285</td>\n","      <td>0.694250</td>\n","      <td>0.691900</td>\n","    </tr>\n","    <tr>\n","      <th>count_vectorizer_ngram(4, 5)</th>\n","      <td>0.711143</td>\n","      <td>0.701947</td>\n","      <td>0.703617</td>\n","      <td>0.701530</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 2)</th>\n","      <td>0.662940</td>\n","      <td>0.657851</td>\n","      <td>0.657819</td>\n","      <td>0.657346</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(2, 3)</th>\n","      <td>0.678346</td>\n","      <td>0.682536</td>\n","      <td>0.678186</td>\n","      <td>0.681715</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(3, 4)</th>\n","      <td>0.565792</td>\n","      <td>0.547324</td>\n","      <td>0.526155</td>\n","      <td>0.545832</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(4, 5)</th>\n","      <td>0.510655</td>\n","      <td>0.415942</td>\n","      <td>0.338741</td>\n","      <td>0.413577</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 1)</th>\n","      <td>0.670794</td>\n","      <td>0.666479</td>\n","      <td>0.667046</td>\n","      <td>0.666012</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 3)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 4)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 5)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 6)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 7)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 8)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","    <tr>\n","      <th>tfidfvectorizer(1, 9)</th>\n","      <td>0.661357</td>\n","      <td>0.656227</td>\n","      <td>0.656129</td>\n","      <td>0.655716</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20f9f569-bb4b-4fba-9510-49b7e74c0639')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-20f9f569-bb4b-4fba-9510-49b7e74c0639 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-20f9f569-bb4b-4fba-9510-49b7e74c0639');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                              precision    recall  f1-score  accuracy\n","count_vectorizer(1, 1)         0.704761  0.699372  0.699908  0.698863\n","count_vectorizer(1, 2)         0.716487  0.715379  0.715064  0.714788\n","count_vectorizer(2, 2)         0.679901  0.685987  0.680790  0.685123\n","count_vectorizer(2, 3)         0.673084  0.680223  0.673941  0.679308\n","count_vectorizer(3, 4)         0.573813  0.567670  0.546339  0.566201\n","count_vectorizer(4, 5)         0.509027  0.444182  0.383707  0.441984\n","count_vectorizer_ngram(1, 2)   0.636758  0.623782  0.626633  0.623569\n","count_vectorizer_ngram(2, 3)   0.686061  0.672590  0.675204  0.672271\n","count_vectorizer_ngram(3, 4)   0.703091  0.692285  0.694250  0.691900\n","count_vectorizer_ngram(4, 5)   0.711143  0.701947  0.703617  0.701530\n","tfidfvectorizer(1, 2)          0.662940  0.657851  0.657819  0.657346\n","tfidfvectorizer(2, 3)          0.678346  0.682536  0.678186  0.681715\n","tfidfvectorizer(3, 4)          0.565792  0.547324  0.526155  0.545832\n","tfidfvectorizer(4, 5)          0.510655  0.415942  0.338741  0.413577\n","tfidfvectorizer(1, 1)          0.670794  0.666479  0.667046  0.666012\n","tfidfvectorizer(1, 3)          0.661357  0.656227  0.656129  0.655716\n","tfidfvectorizer(1, 4)          0.661357  0.656227  0.656129  0.655716\n","tfidfvectorizer(1, 5)          0.661357  0.656227  0.656129  0.655716\n","tfidfvectorizer(1, 6)          0.661357  0.656227  0.656129  0.655716\n","tfidfvectorizer(1, 7)          0.661357  0.656227  0.656129  0.655716\n","tfidfvectorizer(1, 8)          0.661357  0.656227  0.656129  0.655716\n","tfidfvectorizer(1, 9)          0.661357  0.656227  0.656129  0.655716"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","metadata":{"id":"5QYTwyMtWhAZ"},"source":["## Задание 5.2 Регулярные выражения\n","\n","Регулярные выражения - способ поиска и анализа строк. Например, можно понять, какие даты в наборе строк представлены в формате DD/MM/YYYY, а какие - в других форматах. \n","\n","Или бывает, например, что перед работой с текстом, надо почистить его от своеобразного мусора: упоминаний пользователей, url и так далее.\n","\n","Навык полезный, давайте в нём тоже потренируемся.\n","\n","Для работы с регулярными выражениями есть библиотека **re**"]},{"cell_type":"code","metadata":{"id":"VaUW5S4gWhAb"},"source":["import re"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D6aYh7Osl8xr"},"source":["В регулярных выражениях, кроме привычных символов-букв, есть специальные символы:\n","* **?а** - ноль или один символ **а**\n","* **+а** - один или более символов **а**\n","* **\\*а** - ноль или более символов **а** (не путать с +)\n","* **.** - любое количество любого символа\n","\n","Пример:\n","Выражению \\*a?b. соответствуют последовательности a, ab, abc, aa, aac НО НЕ abb!"]},{"cell_type":"markdown","metadata":{"id":"q7zOFFA3l_KQ"},"source":["Рассмотрим подробно несколько наиболее полезных функций:"]},{"cell_type":"markdown","metadata":{"id":"DbJrUpARWhAd"},"source":["### findall\n","возвращает список всех найденных непересекающихся совпадений.\n","\n","Регулярное выражение **ab+c.**: \n","* **a** - просто символ **a**\n","* **b+** - один или более символов **b**\n","* **c** - просто символ **c**\n","* **.** - любой символ\n"]},{"cell_type":"code","metadata":{"id":"2athHzKuWhAd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903983374,"user_tz":-180,"elapsed":21,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"9087396d-454f-4b53-ca5a-70ba60fc94bf"},"source":["result = re.findall('ab+c.', 'abcdefghijkabcabcxabc') \n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['abcd', 'abca']\n"]}]},{"cell_type":"markdown","metadata":{"id":"A9FpIw5RWhAf"},"source":["Вопрос на внимательность: почему нет abcx?"]},{"cell_type":"markdown","metadata":{"id":"B5ttzoxEWhAg"},"source":["**Задание**: вернуть список первых двух букв каждого слова в строке, состоящей из нескольких слов."]},{"cell_type":"code","metadata":{"id":"7ZR2AEq3WhAg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903983374,"user_tz":-180,"elapsed":18,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"42014e31-03ce-4934-da15-e8988eca97c7"},"source":["result = re.findall(r'\\b\\w.', 'Hello World')\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['He', 'Wo']\n"]}]},{"cell_type":"markdown","metadata":{"id":"MI18l-l9WhAk"},"source":["### split\n","разделяет строку по заданному шаблону\n"]},{"cell_type":"code","metadata":{"id":"sVKdRoc1WhAl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903983375,"user_tz":-180,"elapsed":17,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"7e62ec6c-fc73-4ce2-e12c-f202dafa09ed"},"source":["result = re.split(',', 'itsy, bitsy, teenie, weenie') \n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['itsy', ' bitsy', ' teenie', ' weenie']\n"]}]},{"cell_type":"markdown","metadata":{"id":"10u5efuSWhAm"},"source":["можно указать максимальное количество разбиений"]},{"cell_type":"code","metadata":{"id":"9U9EQZMwWhAn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903983723,"user_tz":-180,"elapsed":364,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"d3417cda-aa7b-41a3-e85d-a661409bce25"},"source":["result = re.split(',', 'itsy, bitsy, teenie, weenie', maxsplit=2) \n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['itsy', ' bitsy', ' teenie, weenie']\n"]}]},{"cell_type":"markdown","metadata":{"id":"0EMcMyflWhAp"},"source":["**Задание**: разбейте строку, состоящую из нескольких предложений, по точкам, но не более чем на 3 предложения."]},{"cell_type":"code","metadata":{"id":"dVgPSjEOWhAp"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1wrEGqBSWhAr"},"source":["### sub\n","ищет шаблон в строке и заменяет все совпадения на указанную подстроку\n","\n","параметры: (pattern, repl, string)"]},{"cell_type":"code","metadata":{"id":"az3KxKWwWhAr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903983724,"user_tz":-180,"elapsed":9,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"dab305db-355e-4e78-dda7-94ddda95ec34"},"source":["result = re.sub('a', 'b', 'abcabc')\n","print (result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["bbcbbc\n"]}]},{"cell_type":"markdown","metadata":{"id":"qD0n7_HPWhAt"},"source":["**Задание**: напишите регулярное выражение, которое позволит заменить все цифры в строке на \"DIG\"."]},{"cell_type":"code","metadata":{"id":"s_Sdu7xlWhAu"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"b8__oi1PWhAv"},"source":["**Задание**: напишите  регулярное выражение, которое позволит убрать url из строки."]},{"cell_type":"code","metadata":{"id":"KwNS9zt4WhAv"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gStgBJy2WhAx"},"source":["### compile\n","компилирует регулярное выражение в отдельный объект"]},{"cell_type":"code","metadata":{"id":"JstTupisWhAy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641903983726,"user_tz":-180,"elapsed":9,"user":{"displayName":"Олег Лайок","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjGUZQge5cEWTDYfwbY-iuk7Qjtwyl3Xsm3gwYPjQ=s64","userId":"11400771429504444117"}},"outputId":"5b7a1d1a-959d-4072-8421-f2739820a785"},"source":["# Пример: построение списка всех слов строки:\n","prog = re.compile('[А-Яа-яё\\-]+')\n","prog.findall(\"Слова? Да, больше, ещё больше слов! Что-то ещё.\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Слова', 'Да', 'больше', 'ещё', 'больше', 'слов', 'Что-то', 'ещё']"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"WXEXc3G0WhA2"},"source":["**Задание**: для выбранной строки постройте список слов, которые длиннее трех символов."]},{"cell_type":"code","metadata":{"id":"nFvnIWbUWhA2"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SQDNZ3HQWhA3"},"source":["**Задание**: вернуть список доменов (@gmail.com) из списка адресов электронной почты:\n","\n","```\n","abc.test@gmail.com, xyz@test.in, test.first@analyticsvidhya.com, first.test@rest.biz\n","```"]}]}